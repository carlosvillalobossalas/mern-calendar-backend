{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","initialState","reset","setvalues","useState","values","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","console","log","Navbar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3208dd7f.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\n\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseUrl }/${ endpoint }`;\n\n    if ( method === 'GET' ) {\n        return fetch( url );\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify( data )\n        });\n    }\n}\n\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseUrl }/${ endpoint }`;\n    const token = localStorage.getItem('token') || '';\n\n    if ( method === 'GET' ) {\n        return fetch( url, {\n            method,\n            headers: {\n                'x-token': token\n            }\n        });\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify( data )\n        });\n    }\n}\n\n\n\nexport {\n    fetchSinToken,\n    fetchConToken\n}","\nexport const types = {\n\n    uiOpenModal: '[ui] Open modal',\n    uiCloseModal: '[ui] Close modal',\n\n    \n    eventSetActive: '[event] Set Active',\n    eventLogout: '[event] Logout event',\n    \n    evetStartAddNew: '[event] Start add new',\n    eventAddNew: '[event] Add new',\n    eventClearActiveEvent: '[event] Clear active event',\n    eventUpdated: '[event] Event updated',\n    eventDeleted: '[event] Event deleted',\n    eventLoaded: '[event] Events loaded',\n\n\n    authCheckingFinish: '[auth] Finish checking login state',\n    authStartLogin: '[auth] Start login',\n    authLogin: '[auth] Login',\n    authStartRegister: '[auth] Start Register',\n    authStartStartTokenRenew: '[auth] Start token renew',\n    authLogout: '[auth] Logout',\n\n}","import moment from 'moment'\n\n\nexport const prepareEvents = ( events = [] ) => {\n\n    return events.map(\n        (e) => ({\n            ...e,\n            end: moment( e.end ).toDate(),\n            start: moment( e.start ).toDate(),\n        })\n    );\n\n}","import Swal from 'sweetalert2';\n\nimport { types } from '../types/types';\nimport { fetchConToken } from '../helpers/fetch';\nimport { prepareEvents } from '../helpers/prepareEvents';\n\n\nexport const eventStartAddNew = ( event ) => {\n    return async( dispatch, getState ) => {\n\n        const { uid, name } = getState().auth;\n\n        try {\n            const resp = await fetchConToken('events', event, 'POST');\n            const body = await resp.json();\n\n            console.log(body)\n\n            if ( body.ok ) {\n                event.id = body.evento.id;\n                event.user = {\n                    _id: uid,\n                    name: name\n                }\n                console.log( event );\n                dispatch( eventAddNew( event ) );\n            }\n\n\n        } catch (error) {\n            console.log(error);\n        }\n\n        \n\n    }\n}\n\n\n\nconst eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n});\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent });\n\n\n\nexport const eventStartUpdate = ( event ) => {\n    return async(dispatch) => {\n\n        try {\n            const resp = await fetchConToken(`events/${ event.id }`, event, 'PUT' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( eventUpdated( event ) );\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\nconst eventUpdated = ( event ) => ({\n    type: types.eventUpdated,\n    payload: event\n});\n\n\nexport const eventStartDelete = () => {\n    return async ( dispatch, getState ) => {\n\n        const { id } = getState().calendar.activeEvent;\n        try {\n            const resp = await fetchConToken(`events/${ id }`, {}, 'DELETE' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( eventDeleted() );\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\n\nconst eventDeleted = () => ({ type: types.eventDeleted });\n\n\nexport const eventStartLoading = () => {\n    return async(dispatch) => {\n\n        try {\n            \n            const resp = await fetchConToken( 'events' );\n            const body = await resp.json();\n\n            const events = prepareEvents( body.eventos );\n            dispatch( eventLoaded( events ) );\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\nconst eventLoaded = (events) => ({\n    type: types.eventLoaded,\n    payload: events\n})\n\nexport const eventLogout =() => ({ type: types.eventLogout });","import { fetchSinToken, fetchConToken } from '../helpers/fetch';\nimport { types } from '../types/types';\nimport Swal from 'sweetalert2';\nimport { eventLogout } from './events';\n\n\n\nexport const startLogin = ( email, password ) => {\n    return async( dispatch ) => {\n\n        const resp = await fetchSinToken( 'auth', { email, password }, 'POST' );\n        const body = await resp.json();\n\n        if( body.ok ) {\n            localStorage.setItem('token', body.token );\n            localStorage.setItem('token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }) )\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n        }\n        \n\n    }\n}\n\nexport const startRegister = ( email, password, name ) => {\n    return async( dispatch ) => {\n\n        const resp = await fetchSinToken( 'auth/new', { email, password, name }, 'POST' );\n        const body = await resp.json();\n\n        if( body.ok ) {\n            localStorage.setItem('token', body.token );\n            localStorage.setItem('token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }) )\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n        }\n\n\n    }\n}\n\nexport const startChecking = () => {\n    return async(dispatch) => {\n\n        const resp = await fetchConToken( 'auth/renew' );\n        const body = await resp.json();\n\n        if( body.ok ) {\n            localStorage.setItem('token', body.token );\n            localStorage.setItem('token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }) )\n        } else {\n            dispatch( checkingFinish() );\n        }\n    }\n}\n\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\n\n\n\nconst login = ( user ) => ({\n    type: types.authLogin,\n    payload: user\n});\n\n\nexport const startLogout = () => {\n    return ( dispatch ) => {\n\n        localStorage.clear();\n        dispatch( eventLogout() );\n        dispatch( logout() );\n    }\n}\n\nconst logout = () => ({ type: types.authLogout })","import { useState } from 'react'\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    //HOOK PARA RECIBIR EL TEXTO DE INPUT EN UN FORMULARIO\r\n    \r\n    const reset = () => {\r\n        setvalues(initialState);\r\n    }\r\n    \r\n\r\n    const [values, setvalues] = useState(initialState);\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setvalues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n    };\r\n\r\n    return [values, handleInputChange, reset];\r\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useForm } from '../../hooks/useForm';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport Swal from 'sweetalert2';\n\nimport './login.css';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n\n    \n    const [ formLoginValues, handleLoginInputChange ] = useForm({\n        lEmail: '',\n        lPassword: ''\n    });\n\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\n        rName: '',\n        rEmail: '',\n        rPassword1: '',\n        rPassword2: ''\n    });\n    \n    const { lEmail, lPassword } = formLoginValues;\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\n\n    const handleLogin = ( e ) => {\n        e.preventDefault();\n        dispatch( startLogin( lEmail, lPassword ) );\n    }\n\n    const handleRegister = ( e ) => {\n        e.preventDefault();\n\n        if ( rPassword1 !== rPassword2 ) {\n            return Swal.fire('Error', 'Las contraseñas deben de ser iguales','error');\n        }\n        console.log('?')\n        dispatch( startRegister( rEmail, rPassword1, rName ) );\n    }\n\n\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form onSubmit={ handleLogin }>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"lEmail\"\n                                value={ lEmail }\n                                onChange={ handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"lPassword\"\n                                value={ lPassword }\n                                onChange={ handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\" \n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form onSubmit={ handleRegister }>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                                name=\"rName\"\n                                value={ rName }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"rEmail\"\n                                value={ rEmail }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\" \n                                name=\"rPassword1\"\n                                value={ rPassword1 }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contraseña\" \n                                name=\"rPassword2\"\n                                value={ rPassword2 }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\" \n                                className=\"btnSubmit\" \n                                value=\"Crear cuenta\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { startLogout } from '../../actions/auth';\n\nexport const Navbar = () => {\n\n    const dispatch = useDispatch();\n    const { name } = useSelector( state => state.auth );\n\n    const handleLogout = () => {\n        dispatch( startLogout() );\n    }\n\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n            <span className=\"navbar-brand\">\n                { name }\n            </span>\n            \n            <button \n                className=\"btn btn-outline-danger\"\n                onClick={ handleLogout }\n            >\n                <i className=\"fas fa-sign-out-alt\"></i>\n                <span> Salir</span>\n            </button>\n\n        </div>\n    )\n}\n","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import React from 'react'\n\nexport const CalendarEvent = ({ event }) => {\n\n    const { title, user } = event;\n\n    return (\n        <div>\n            <strong> { title } </strong>\n            <span>- { user.name } </span>\n        </div>\n    )\n}\n","import { types } from '../types/types';\n\n\n\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport moment from 'moment';\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport Swal from 'sweetalert2';\n\nimport { uiCloseModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\n\n\nconst customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)'\n    }\n};\nModal.setAppElement('#root');\n\nconst now = moment().minutes(0).seconds(0).add(1,'hours'); // 3:00:00\nconst nowPlus1 = now.clone().add(1, 'hours');\n\nconst initEvent = {\n    title: '',\n    notes: '',\n    start: now.toDate(),\n    end: nowPlus1.toDate()\n}\n\n\nexport const CalendarModal = () => {\n\n    const { modalOpen } = useSelector( state => state.ui );\n    const { activeEvent } = useSelector( state => state.calendar );\n    const dispatch = useDispatch();\n\n    const [ dateStart, setDateStart ] = useState( now.toDate() );\n    const [ dateEnd, setDateEnd ] = useState( nowPlus1.toDate() );\n    const [ titleValid, setTitleValid ] = useState(true);\n    \n    const [formValues, setFormValues] = useState( initEvent );\n\n    const { notes, title, start, end } = formValues;\n\n    useEffect(() => {\n        if ( activeEvent ) {\n            setFormValues( activeEvent );\n        } else {\n            setFormValues( initEvent );\n        }\n    }, [activeEvent, setFormValues])\n\n\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    }\n\n\n    const closeModal = () => {\n        // TODO: cerrar el modal\n        dispatch( uiCloseModal() );\n        dispatch( eventClearActiveEvent() );\n        setFormValues( initEvent );\n    }\n\n    const handleStartDateChange = ( e ) => {\n        setDateStart( e );\n        setFormValues({\n            ...formValues,\n            start: e\n        })\n    }\n    \n    const handleEndDateChange = ( e ) => {\n        setDateEnd( e );\n        setFormValues({\n            ...formValues,\n            end: e\n        })\n    }\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n        \n        const momentStart = moment( start );\n        const momentEnd = moment( end );\n\n        if ( momentStart.isSameOrAfter( momentEnd ) ) {\n            return Swal.fire('Error','La fecha fin debe de ser mayor a la fecha de inicio', 'error');\n        }\n\n        if ( title.trim().length < 2 ) {\n            return setTitleValid(false);\n        }\n\n        if ( activeEvent ) {\n            dispatch( eventStartUpdate( formValues ) )\n        } else {\n            dispatch( eventStartAddNew(formValues) );\n        }\n\n\n        setTitleValid(true);\n        closeModal();\n        \n    }\n\n\n    return (\n        <Modal\n          isOpen={ modalOpen }\n          onRequestClose={ closeModal }\n          style={ customStyles }\n          closeTimeoutMS={ 200 }\n          className=\"modal\"\n          overlayClassName=\"modal-fondo\"\n        >\n            <h1> { (activeEvent)? 'Editar evento': 'Nuevo evento' } </h1>\n            <hr />\n            <form \n                className=\"container\"\n                onSubmit={ handleSubmitForm }\n            >\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker\n                        onChange={ handleStartDateChange }\n                        value={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker\n                        onChange={ handleEndDateChange }\n                        value={ dateEnd }\n                        minDate={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input \n                        type=\"text\" \n                        className={ `form-control ${ !titleValid && 'is-invalid' } `}\n                        placeholder=\"Título del evento\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={ title }\n                        onChange={ handleInputChange }\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea \n                        type=\"text\" \n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={ notes }\n                        onChange={ handleInputChange }\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n\n            </form>\n\n        </Modal>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleClickNew = () => {\n        dispatch( uiOpenModal() );\n    }\n\n\n    return (\n        <button\n            className=\"btn btn-primary fab\"\n            onClick={ handleClickNew }\n        >\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux'\nimport { eventStartDelete } from '../../actions/events';\n\nexport const DeleteEventFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleDelete = () => {\n        dispatch( eventStartDelete() );\n    }\n\n    return (\n        <button\n            className=\"btn btn-danger fab-danger\"\n            onClick={ handleDelete }\n        >\n            <i className=\"fas fa-trash\"></i>\n            <span> Borrar evento </span>\n        </button>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\n\nimport { Navbar } from '../ui/Navbar';\nimport { messages } from '../../helpers/calendar-messages-es';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\n\nimport { uiOpenModal } from '../../actions/ui';\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'moment/locale/es';\nimport { eventSetActive, eventClearActiveEvent, eventStartLoading } from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\n\nmoment.locale('es');\n\nconst localizer = momentLocalizer(moment);\n\nexport const CalendarScreen = () => {\n\n    const dispatch = useDispatch();\n    const { events, activeEvent } = useSelector( state => state.calendar );\n    const { uid } = useSelector( state => state.auth );\n\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' );\n\n    useEffect(() => {\n        \n        dispatch( eventStartLoading() );\n\n    }, [ dispatch ])\n\n\n    const onDoubleClick = (e) => {\n        // console.log(e);\n        dispatch( uiOpenModal() );\n    }\n\n    const onSelectEvent = (e) => {\n        dispatch( eventSetActive( e ) );\n    }\n\n    const onViewChange = (e) => {\n        setLastView(e);\n        localStorage.setItem('lastView', e);\n    }\n\n    const onSelectSlot = (e) => {\n        // console.log(e)\n        dispatch( eventClearActiveEvent() );\n    }\n\n\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\n\n        const style = {\n            backgroundColor: ( uid === event.user._id ) ? '#367CF7' : '#465660',\n            borderRadius: '0px',\n            opacity: 0.8,\n            display: 'block',\n            color: 'white'\n        }\n\n\n        return {\n            style\n        }\n    };\n\n    return (\n        <div className=\"calendar-screen\">\n            <Navbar />\n            \n\n            <Calendar\n                localizer={ localizer }\n                events={ events }\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages={ messages }\n                eventPropGetter={ eventStyleGetter }\n                onDoubleClickEvent={ onDoubleClick }\n                onSelectEvent={ onSelectEvent }\n                onView={ onViewChange }\n                onSelectSlot={ onSelectSlot }\n                selectable={ true }\n                view={ lastView }\n                components={{\n                    event: CalendarEvent\n                }}\n            />\n\n\n\n            <AddNewFab />\n\n\n            {\n                (activeEvent) && <DeleteEventFab />\n            }\n            \n\n            <CalendarModal />\n\n\n\n        </div>\n    )\n}\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest //argumentos = rest\r\n}) => {\r\n\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={(props) => (\r\n                (isAuthenticated)\r\n                    ? (<Component {...props} />)\r\n                    : (<Redirect to=\"/auth/login\" />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest //argumentos = rest\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n            component={(props) => (\r\n                (!isAuthenticated)\r\n                    ? (<Component {...props} />)\r\n                    : (<Redirect to=\"/\" />)\r\n            )}\r\n        />\r\n    )\r\n\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { checking, uid } = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n        dispatch(startChecking())\r\n    }, [dispatch]);\r\n\r\n    if (checking) {\r\n        //podria ser un componente personalizado para loading\r\n        return( <h5>Espere...</h5>);\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        exact\r\n                        path=\"/auth/login\"\r\n                        component={LoginScreen}\r\n                        isAuthenticated={!!uid}\r\n                    />\r\n                    <PrivateRoute\r\n                        exact\r\n                        path=\"/\"\r\n                        component={CalendarScreen}\r\n                        isAuthenticated={!!uid}\r\n                    />\r\n\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false,\n}\n\n\n\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n    \n        default:\n            return state;\n    }\n\n\n}","import { types } from '../types/types';\n// {\n//     id: 'askdjhaksdjas',\n//     title: 'Cumpleaños del jefe',\n//     start: moment().toDate(),\n//     end: moment().add( 2, 'hours' ).toDate(),\n//     notes: 'Comprar el pastel',\n//     user: {\n//         _id: '123',\n//         name: 'Fernando'\n//     }\n// }\n\nconst initialState = {\n    events: [],\n    activeEvent: null\n};\n\n\nexport const calendarReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n        \n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [\n                    ...state.events,\n                    action.payload\n                ]\n            }\n    \n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null\n            }\n\n\n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map(\n                    e => ( e.id === action.payload.id ) ? action.payload : e\n                )\n            }\n        \n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(\n                    e => ( e.id !== state.activeEvent.id )\n                ),\n                activeEvent: null\n            }\n\n        case types.eventLoaded:\n            return {\n                ...state,\n                events: [ ...action.payload ]\n            }\n\n        case types.eventLogout:\n            return {\n                ...initialState\n            }\n\n        default:\n            return state;\n    }\n\n\n}\n","import { types } from '../types/types';\n\nconst initialState = {\n    checking: true,\n    // uid: null,\n    // name: null\n}\n\nexport const authReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.authLogin:\n            return {\n                ...state,\n                ...action.payload,\n                checking: false\n            }\n\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: false\n            }\n\n        case types.authLogout:\n            return {\n                checking: false\n            }\n\n\n        default:\n            return state;\n    }\n\n}\n\n\n","import { combineReducers } from 'redux';\n\nimport { uiReducer } from './uiReducer';\nimport { calendarReducer } from './calendarReducer';\nimport { authReducer } from './authReducer';\n\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer\n})\n\n","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { AppRouter } from './router/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}